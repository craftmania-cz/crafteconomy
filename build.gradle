plugins {
    id "org.ajoberstar.grgit" version "1.7.0"
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

apply plugin: 'java'
apply plugin: 'maven'

group 'cz.craftmania.crafteconomy'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

clean { delete "./target" }
clean { delete "./build" }

def mainVersion = "1.3.6"
def branch = "?"
def gitId = ""

ext {
    try {
        git = org.ajoberstar.grgit.Grgit.open(file(".git"))
        date = git.head().date.format("yy.MM.dd")
        //gitId = "-${git.head().abbreviatedId}"
        gitId = "-SNAPSHOT"
    } catch (Throwable ignore) {
        gitId = "-unknown"
    }
    try {
        git = org.ajoberstar.grgit.Grgit.open(file(".git"))
        date = git.head().date.format("yy.MM.dd")
        branch = "-${git.branch.current.fullName}".replace("refs/heads/", "")
        print(branch)
        if (branch.toString().equalsIgnoreCase("-master") || branch.toString().equalsIgnoreCase("-head")) {
            branch = ""
            gitId = ""
        }
    } catch (Throwable ignore) {
        branch = "-unknown"
    }
}

// Name-master-76735d.jar
version = mainVersion

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${nexusUrl}/repository/release") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(url: "${nexusUrl}/repository/snapshots") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

task compilePlugin(type: Jar) {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task generateJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = sourceSets.main.compileClasspath
}

repositories {
    flatDir {dirs 'libs'}
    mavenCentral()
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url "https://packages.craftmania.cz/repository/craftmania/"}
    maven { url "https://packages.craftmania.cz/repository/third-party/"}
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url 'https://jitpack.io' }
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://raw.github.com/PyvesB/AdvancedAchievements/mvn-repo/" }
    maven { url "https://repo.aikar.co/content/groups/aikar/" }
}

dependencies {
    compileOnly ('org.spigotmc:spigot-api:1.15.2-R0.1-SNAPSHOT') {
        exclude group: 'net.md-5'
    }

    compileOnly 'net.md-5:bungeecord-api:1.16-R0.2-SNAPSHOT'

    // Craftmania plugins
    compileOnly 'cz.craftmania.craftcore:craftcore:2.2.7'
    compileOnly 'cz.craftmania.craftlibs:craftlibs:1.1.0'

    // Other dependecies
    compile 'com.zaxxer:HikariCP:2.7.4'
    compileOnly 'org.ajoberstar:grgit:1.7.0'
    compileOnly 'com.hm.achievement:advanced-achievements-api:1.2.0'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    compileOnly 'com.zrips:cmi:8.6.21.3'

    // Commands
    compile 'co.aikar:acf-paper:0.5.0-SNAPSHOT'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

shadowJar {
    relocate 'co.aikar.commands', 'cz.craftmania.crafteconomy.acf'
    relocate 'co.aikar.locales', 'cz.craftmania.crafteconomy.locales'
}

build.dependsOn shadowJar
